# main/handle_email_request.py
import os
import json
from typing import List, Dict, Any
from preprocessing.classify_attachment import classify_attachment
from ingestion.extract_text_universal import extract_text_from_file
from llm.gpt_analyzer import extract_key_clauses, extract_goods_table
from bitrix24.bitrix_sender import send_to_bitrix24

def handle_email_request(files: List[str], output_dir: str = "output") -> Dict[str, Any]:
    """
    –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è —Å –≤–ª–æ–∂–µ–Ω–∏—è–º–∏:
    - –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç —Ñ–∞–π–ª—ã
    - –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ LLM-–º–æ–¥—É–ª–∏
    - —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ JSON
    - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ Bitrix24
    """
    print("make files")
    os.makedirs(output_dir, exist_ok=True)
    print("finish")
    
    results = {
        "key_clauses": {},
        "goods": [],
        "metadata": [],
        "processed_files": []
    }
    
    print(f"üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ {len(files)} —Ñ–∞–π–ª–æ–≤...")
    
    for file_path in files:
        try:
            print(f"üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é: {os.path.basename(file_path)}")
            
            # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞
            text = extract_text_from_file(file_path)
            if not text.strip():
                print(f"‚ö†Ô∏è –ü—É—Å—Ç–æ–π —Ñ–∞–π–ª: {file_path}")
                continue
            
            # –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
            doc_type = classify_attachment(text, os.path.basename(file_path))
            print(f"‚û°Ô∏è –¢–∏–ø: {doc_type}")
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
            if doc_type == "–¥–æ–≥–æ–≤–æ—Ä":
                clauses = extract_key_clauses(text)
                results["key_clauses"][os.path.basename(file_path)] = clauses
                
            elif doc_type == "–Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞":
                goods = extract_goods_table(text)
                results["goods"].append({
                    "file": os.path.basename(file_path),
                    "items": goods
                })
                
            elif doc_type == "–∏–∑–≤–µ—â–µ–Ω–∏–µ":
                results["metadata"].append({
                    "type": "–ò–∑–≤–µ—â–µ–Ω–∏–µ",
                    "file": os.path.basename(file_path),
                    "content": text[:1000] + "..." if len(text) > 1000 else text
                })
                
            else:
                results["metadata"].append({
                    "type": "–ù–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π —Ñ–∞–π–ª",
                    "file": os.path.basename(file_path),
                    "content": text[:500] + "..." if len(text) > 500 else text
                })
            
            results["processed_files"].append({
                "file": os.path.basename(file_path),
                "type": doc_type,
                "size": len(text)
            })
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {file_path}: {str(e)}")
            results["metadata"].append({
                "type": "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏",
                "file": os.path.basename(file_path),
                "error": str(e)
            })
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    output_file = os.path.join(output_dir, "email_parsed.json")
    with open(output_file, "w", encoding="utf-8") as f:
        json.dump(results, f, ensure_ascii=False, indent=2)
    
    print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {output_file}")
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Bitrix24
    try:
        summary = f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(results['processed_files'])}"
        if results["key_clauses"]:
            summary += f", –î–æ–≥–æ–≤–æ—Ä–æ–≤: {len(results['key_clauses'])}"
        if results["goods"]:
            summary += f", –ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä: {len(results['goods'])}"
        
        bitrix_response = send_to_bitrix24(
            title=f"–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ—Å—Ç–∞–≤–∫—É - {len(files)} —Ñ–∞–π–ª–æ–≤",
            description=summary + f"\n\n–î–µ—Ç–∞–ª–∏ –≤ —Ñ–∞–π–ª–µ: {output_file}"
        )
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Bitrix24: {bitrix_response}")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Bitrix24: {str(e)}")
    
    return results